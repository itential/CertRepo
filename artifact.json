{
  "metadata": {
    "name": "@local/create-artifact-test",
    "version": "0.0.1",
    "description": "",
    "license": "Apache-2.0",
    "repository": {
      "type": "local",
      "hostname": "localhost",
      "path": "/"
    },
    "keywords": [
      "Itential",
      "IAP",
      "artifacts"
    ],
    "author": "Itential Automation Platform",
    "IAPDependencies": {
      "@itential/app-workflow_engine": "",
      "@itential/app-json_forms": "",
      "@itential/app-configuration_manager": "",
      "@itential/app-operations_manager": ""
    }
  },
  "manifest": {
    "bundleName": "@local/create-artifact-test",
    "fingerprint": "628d220fa8f736331a27db84",
    "createdEpoch": "1653416463038",
    "artifacts": [
      {
        "id": "Test Prebuilt Wizard",
        "name": "Test Prebuilt Wizard",
        "type": "automation",
        "location": "/bundles/automations/Test Prebuilt Wizard.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "CC-Test-Artifact",
        "name": "CC-Test-Artifact",
        "type": "workflow",
        "location": "/bundles/workflows/CC-Test-Artifact.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "test",
        "name": "test",
        "type": "json-forms",
        "location": "/bundles/json_forms/test.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "test-gc",
        "name": "test-gc",
        "type": "golden-config",
        "location": "/bundles/ucm_golden_configs/test-gc.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "6279716b7d92756eae81ed51",
        "name": "test-cc-jst",
        "type": "transformation",
        "location": "/bundles/transformations/test-cc-jst.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "6269c8027d92756eae81ed50",
        "name": "testTravis",
        "type": "transformation",
        "location": "/bundles/transformations/testTravis.json",
        "properties": {
          "entryPoint": false
        }
      }
    ]
  },
  "bundles": [
    {
      "type": "automation",
      "data": {
        "_id": "627971cc621a3a6ecb5e1b93",
        "name": "Test Prebuilt Wizard",
        "description": "",
        "componentName": "CC-Test-Artifact",
        "componentType": "workflows",
        "gbac": {
          "write": [],
          "read": []
        },
        "created": "2022-05-09T19:55:56.200Z",
        "createdBy": "clarisa.colton@itential.com",
        "lastUpdated": "2022-05-09T19:56:15.645Z",
        "lastUpdatedBy": "clarisa.colton@itential.com",
        "triggers": [
          {
            "_id": "627971dd621a3a6ecb5e1b94",
            "created": "2022-05-09T19:56:13.800Z",
            "createdBy": "clarisa.colton@itential.com",
            "lastUpdated": "2022-05-09T19:56:13.800Z",
            "lastUpdatedBy": "clarisa.colton@itential.com",
            "name": "test",
            "type": "manual",
            "enabled": true,
            "actionType": "automations",
            "actionId": "627971cc621a3a6ecb5e1b93",
            "formId": "test",
            "formData": null,
            "migrationVersion": 1
          }
        ]
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "CC-Test-Artifact",
        "type": "automation",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0,
            "y": 0.5
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1,
            "y": 0.5
          },
          "6ea5": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "test-cc-jst",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6279716b7d92756eae81ed51",
                "variableMap": {
                  "input": "abc"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "output": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "description",
                "highlightString": "Perform a JSON Transformation using the <span class='highlight-string'>JST</span> library."
              }
            ],
            "groups": [],
            "x": 0.49747242647058826,
            "y": 0.5,
            "task_name": "test-cc-jst",
            "retrySettings": null
          },
          "b765": {
            "name": "getGoldenConfigTree",
            "canvasName": "getGoldenConfigTree",
            "summary": "Get summary of a Golden Config tree.",
            "description": "Get summary of the specified Golden Config tree.",
            "location": "Application",
            "locationType": null,
            "app": "ConfigurationManager",
            "type": "automatic",
            "displayName": "ConfigurationManager",
            "variables": {
              "incoming": {
                "treeId": "61649ea2292c9400b4060714"
              },
              "outgoing": {
                "tree": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "get<span class='highlight-string'>Golden</span>ConfigTree"
              },
              {
                "key": "summary",
                "highlightString": "Get summary of a <span class='highlight-string'>Golden</span> Config tree."
              },
              {
                "key": "description",
                "highlightString": "Get summary of the specified <span class='highlight-string'>Golden</span> Config tree."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6956862745098039,
            "y": 0.5357142857142857,
            "scheduled": false
          },
          "bf25": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "testTravis",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6269c8027d92756eae81ed50",
                "variableMap": {
                  "input": ""
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "output1": null,
                "output2": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "description",
                "highlightString": "Perform a JSON Transformation using the <span class='highlight-string'>JST</span> library."
              }
            ],
            "groups": [],
            "x": 0.8392156862745098,
            "y": 0.6174582798459564,
            "task_name": "testTravis",
            "retrySettings": null
          }
        },
        "transitions": {
          "workflow_start": {
            "6ea5": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "6ea5": {
            "b765": {
              "type": "standard",
              "state": "success"
            }
          },
          "b765": {
            "bf25": {
              "type": "standard",
              "state": "success"
            }
          },
          "bf25": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "last_updated": "2022-05-10T15:55:14.550Z",
        "last_updated_by": {
          "provenance": "Itential-Okta",
          "username": "clarisa.colton@itential.com",
          "firstname": "Clarisa",
          "inactive": false
        },
        "lastUpdatedVersion": "5.44.8-2021.2.2.0",
        "inputSchema": {
          "type": "object",
          "properties": {}
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "created": "2022-05-09T19:53:45.212Z",
        "created_by": {
          "provenance": "Itential-Okta",
          "username": "clarisa.colton@itential.com",
          "firstname": "Clarisa",
          "inactive": false
        },
        "createdVersion": "5.44.8-2021.2.2.0",
        "tags": [],
        "groups": [],
        "migrationVersion": 1
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "622796d5fb43c1096b611faa",
        "created": "2022-03-08T17:48:05.282Z",
        "createdBy": "zack.strulovitch@itential.com",
        "lastUpdated": "2022-03-08T17:53:47.031Z",
        "lastUpdatedBy": "zack.strulovitch@itential.com",
        "name": "test",
        "description": null,
        "struct": {
          "type": "object",
          "description": "",
          "items": [
            {
              "nodeId": "bf45b3f5-8b30-45c9-bee2-f06b0e848eac",
              "type": "string",
              "title": "Dropdown 1",
              "description": "",
              "placeholder": "Select an item",
              "required": false,
              "enum": [],
              "enumNames": [],
              "binding": true,
              "rel": "collection",
              "targetPointer": "/enum",
              "method": "GET",
              "uniqueItems": false,
              "base": "/admin",
              "href": "/services/health",
              "sourcePointer": "/results",
              "labelKeyPointer": "/id",
              "sourceKeyPointer": "/package_id"
            }
          ]
        },
        "schema": {
          "title": "test",
          "description": "",
          "type": "object",
          "required": [],
          "properties": {
            "dropdown1": {
              "type": "string",
              "title": "Dropdown 1",
              "_id": "/properties/dropdown1",
              "description": "",
              "enum": [],
              "enumNames": []
            }
          }
        },
        "uiSchema": {
          "dropdown1": {
            "ui:placeholder": "Select an item"
          }
        },
        "bindingSchema": {
          "properties": {
            "dropdown1": [
              {
                "binding:method": "GET",
                "binding:link": {
                  "$ref": "/links",
                  "rel": "collection"
                },
                "binding:target": {
                  "propertyPointer": "/enum"
                },
                "binding:hyperSchema": {
                  "type": "object",
                  "base": "/admin",
                  "links": [
                    {
                      "rel": "collection",
                      "href": "/services/health",
                      "targetMediaType": "application/json",
                      "targetSchema": {
                        "$ref": "#"
                      },
                      "variables": []
                    }
                  ]
                },
                "binding:source": {
                  "propertyPointer": "/results",
                  "keyPointer": "/package_id"
                }
              },
              {
                "binding:method": "GET",
                "binding:link": {
                  "$ref": "/links",
                  "rel": "collection"
                },
                "binding:target": {
                  "propertyPointer": "/enumNames"
                },
                "binding:hyperSchema": {
                  "type": "object",
                  "base": "/admin",
                  "links": [
                    {
                      "rel": "collection",
                      "href": "/services/health",
                      "targetMediaType": "application/json",
                      "targetSchema": {
                        "$ref": "#"
                      },
                      "variables": []
                    }
                  ]
                },
                "binding:source": {
                  "propertyPointer": "/results",
                  "keyPointer": "/id"
                }
              }
            ]
          }
        },
        "validationSchema": {},
        "version": "2020.1"
      }
    },
    {
      "type": "golden-config",
      "data": {
        "status": "success",
        "data": [
          {
            "_id": "61649ea2292c9400b4060715",
            "name": "test-gc",
            "treeId": "61649ea2292c9400b4060714",
            "version": "initial",
            "deviceType": "a10-acos",
            "root": {
              "name": "base",
              "attributes": {
                "devices": [
                  "lp-test-1643993099000",
                  "cisco-ios-test-cc-1644959446000"
                ],
                "remediationWorkflow": null,
                "configId": "61649ea2292c9400b4060713",
                "export": {
                  "_id": "61649ea2292c9400b4060713",
                  "deviceType": "a10-acos",
                  "lines": [
                    {
                      "id": "620e6c8714058b38",
                      "words": [
                        {
                          "type": "literal",
                          "value": "hostname"
                        },
                        {
                          "type": "literal",
                          "value": "csr03-atl"
                        }
                      ],
                      "lines": [],
                      "evalMode": "required",
                      "fixMode": "manual",
                      "severity": "warning"
                    }
                  ],
                  "template": "hostname {{ host }}",
                  "created": "2021-10-11T20:29:22.429Z",
                  "createdBy": "612660050e15bc6b822bcffc",
                  "lastUpdated": "2022-02-17T21:26:22.932Z",
                  "lastUpdatedBy": "612660050e15bc6b822bcffc"
                }
              },
              "children": []
            },
            "created": "1970-01-01T00:00:00.000Z",
            "createdBy": "612660050e15bc6b822bcffc",
            "lastUpdated": "2022-02-17T21:26:22.932Z",
            "lastUpdatedBy": "612660050e15bc6b822bcffc",
            "gbac": {
              "write": [],
              "read": []
            },
            "variables": {
              "host": "csr03-atl",
              "ipdomain": "itential.com"
            },
            "tags": []
          },
          {
            "_id": "620acda6ddfe1300c41b3547",
            "name": "test-gc",
            "treeId": "61649ea2292c9400b4060714",
            "version": "test",
            "deviceType": "a10-acos",
            "root": {
              "name": "base",
              "attributes": {
                "devices": [
                  "lp-test-1643993099000"
                ],
                "remediationWorkflow": null,
                "configId": "620acda6ddfe1300c41b3548",
                "export": {
                  "_id": "620acda6ddfe1300c41b3548",
                  "deviceType": "a10-acos",
                  "lines": [
                    {
                      "id": "61fd6087667e5777",
                      "words": [
                        {
                          "type": "literal",
                          "value": "hostname"
                        },
                        {
                          "type": "literal",
                          "value": "csr02-atl"
                        }
                      ],
                      "lines": [],
                      "evalMode": "required",
                      "fixMode": "manual",
                      "severity": "warning"
                    },
                    {
                      "id": "61fd60872893bb0b",
                      "words": [
                        {
                          "type": "literal",
                          "value": "ip"
                        },
                        {
                          "type": "literal",
                          "value": "domain"
                        },
                        {
                          "type": "literal",
                          "value": "name"
                        },
                        {
                          "type": "literal",
                          "value": "itential.com"
                        }
                      ],
                      "lines": [],
                      "evalMode": "required",
                      "fixMode": "manual",
                      "severity": "warning"
                    }
                  ],
                  "template": "hostname {{ host }}\nip domain name {{ipdomain}}",
                  "created": "2021-10-11T20:29:22.429Z",
                  "createdBy": "612660050e15bc6b822bcffc",
                  "lastUpdated": "2022-02-17T21:26:22.932Z",
                  "lastUpdatedBy": "612660050e15bc6b822bcffc"
                }
              },
              "children": [
                {
                  "name": "node-247",
                  "attributes": {
                    "devices": [],
                    "remediationWorkflow": null,
                    "configId": "620acda6ddfe1300c41b3549",
                    "export": {
                      "_id": "620acda6ddfe1300c41b3549",
                      "deviceType": "a10-acos",
                      "lines": [],
                      "template": "",
                      "created": "2022-02-14T21:46:08.359Z",
                      "createdBy": "612660050e15bc6b822bcffc",
                      "lastUpdated": "2022-02-17T21:26:22.932Z",
                      "lastUpdatedBy": "612660050e15bc6b822bcffc"
                    }
                  },
                  "children": [
                    {
                      "name": "node-729",
                      "attributes": {
                        "devices": [],
                        "remediationWorkflow": null,
                        "configId": "620acdb5f7afa000c478d300",
                        "export": {
                          "_id": "620acdb5f7afa000c478d300",
                          "deviceType": "a10-acos",
                          "lines": [],
                          "template": "",
                          "created": "2022-02-14T21:46:28.996Z",
                          "createdBy": "612660050e15bc6b822bcffc",
                          "lastUpdated": "2022-02-17T21:26:22.932Z",
                          "lastUpdatedBy": "612660050e15bc6b822bcffc"
                        }
                      },
                      "children": []
                    }
                  ]
                }
              ]
            },
            "created": "1970-01-01T00:00:00.000Z",
            "createdBy": "612660050e15bc6b822bcffc",
            "lastUpdated": "2022-02-17T21:26:22.932Z",
            "lastUpdatedBy": "612660050e15bc6b822bcffc",
            "gbac": {
              "write": [],
              "read": []
            },
            "variables": {
              "host": "csr03-atl",
              "ipdomain": "itential.com"
            },
            "base": "initial",
            "tags": []
          }
        ]
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "6279716b7d92756eae81ed51",
        "name": "test-cc-jst",
        "description": "",
        "incoming": [
          {
            "$id": "input",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "output",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "input",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "output",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2022-05-09T19:54:19.941Z",
        "createdBy": {
          "_id": "612660050e15bc6b822bcffc",
          "provenance": "Itential-Okta",
          "username": "clarisa.colton@itential.com"
        },
        "lastUpdated": "2022-05-09T19:54:45.704Z",
        "lastUpdatedBy": {
          "_id": "612660050e15bc6b822bcffc",
          "provenance": "Itential-Okta",
          "username": "clarisa.colton@itential.com"
        },
        "version": "3.20.5",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "6269c8027d92756eae81ed50",
        "name": "testTravis",
        "description": "",
        "incoming": [
          {
            "$id": "input",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "mdd:openconfig": {
                  "type": "object",
                  "properties": {
                    "openconfig-system:system": {
                      "type": "object",
                      "properties": {
                        "clock": {
                          "type": "object",
                          "properties": {
                            "config": {
                              "type": "object",
                              "properties": {
                                "timezone-name": {
                                  "type": "string",
                                  "examples": [
                                    "EDT -4 0"
                                  ]
                                }
                              },
                              "required": []
                            }
                          },
                          "required": []
                        },
                        "config": {
                          "type": "object",
                          "properties": {
                            "openconfig-system-ext:console-exec-timeout-seconds": {
                              "type": "string",
                              "examples": [
                                "600"
                              ]
                            },
                            "domain-name": {
                              "type": "string",
                              "examples": [
                                "mdd%2Ecisco%2Ecom"
                              ]
                            },
                            "hostname": {
                              "type": "string",
                              "examples": [
                                "BLAH"
                              ]
                            }
                          },
                          "required": []
                        },
                        "openconfig-system-ext:services": {
                          "type": "object",
                          "properties": {
                            "finger": {
                              "type": "boolean",
                              "examples": [
                                true,
                                false
                              ]
                            },
                            "http": {
                              "type": "object",
                              "properties": {
                                "ip-http-max-connections": {
                                  "type": "integer",
                                  "examples": [
                                    2
                                  ]
                                }
                              },
                              "required": []
                            }
                          },
                          "required": []
                        },
                        "dns": {
                          "type": "object",
                          "properties": {
                            "servers": {
                              "type": "object",
                              "properties": {
                                "server": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "address": {
                                        "type": "string",
                                        "examples": [
                                          "208%2E67%2E222%2E222"
                                        ],
                                        "format": "ipv4"
                                      },
                                      "config": {
                                        "type": "object",
                                        "properties": {
                                          "address": {
                                            "type": "string",
                                            "examples": [
                                              "208%2E67%2E222%2E222"
                                            ],
                                            "format": "ipv4"
                                          },
                                          "port": {
                                            "type": "string",
                                            "examples": [
                                              "53"
                                            ]
                                          }
                                        },
                                        "required": []
                                      }
                                    },
                                    "required": []
                                  }
                                }
                              },
                              "required": []
                            }
                          },
                          "required": []
                        },
                        "ntp": {
                          "type": "object",
                          "properties": {
                            "config": {
                              "type": "object",
                              "properties": {
                                "openconfig-system-ext:ntp-enable-logging": {
                                  "type": "boolean",
                                  "examples": [
                                    true,
                                    false
                                  ]
                                },
                                "enable-ntp-auth": {
                                  "type": "boolean",
                                  "examples": [
                                    true,
                                    false
                                  ]
                                },
                                "enabled": {
                                  "type": "boolean",
                                  "examples": [
                                    true,
                                    false
                                  ]
                                }
                              },
                              "required": []
                            },
                            "servers": {
                              "type": "object",
                              "properties": {
                                "server": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "address": {
                                        "type": "string",
                                        "examples": [
                                          "1%2Eus%2Epool%2Entp%2Eorg"
                                        ]
                                      },
                                      "config": {
                                        "type": "object",
                                        "properties": {
                                          "address": {
                                            "type": "string",
                                            "examples": [
                                              "1%2Eus%2Epool%2Entp%2Eorg"
                                            ]
                                          },
                                          "association-type": {
                                            "type": "string",
                                            "examples": [
                                              "SERVER"
                                            ]
                                          },
                                          "iburst": {
                                            "type": "boolean",
                                            "examples": [
                                              true,
                                              false
                                            ]
                                          }
                                        },
                                        "required": []
                                      }
                                    },
                                    "required": []
                                  }
                                }
                              },
                              "required": []
                            }
                          },
                          "required": []
                        },
                        "ssh-server": {
                          "type": "object",
                          "properties": {
                            "config": {
                              "type": "object",
                              "properties": {
                                "openconfig-system-ext:absolute-timeout-minutes": {
                                  "type": "string",
                                  "examples": [
                                    "1200"
                                  ]
                                },
                                "openconfig-system-ext:ssh-timeout": {
                                  "type": "string",
                                  "examples": [
                                    "60"
                                  ]
                                },
                                "enable": {
                                  "type": "boolean",
                                  "examples": [
                                    true,
                                    false
                                  ]
                                },
                                "protocol-version": {
                                  "type": "string",
                                  "examples": [
                                    "V2"
                                  ]
                                },
                                "rate-limit": {
                                  "type": "string",
                                  "examples": [
                                    "0"
                                  ]
                                },
                                "session-limit": {
                                  "type": "string",
                                  "examples": [
                                    "16"
                                  ]
                                },
                                "timeout": {
                                  "type": "string",
                                  "examples": [
                                    "1800"
                                  ]
                                }
                              },
                              "required": []
                            }
                          },
                          "required": []
                        }
                      },
                      "required": []
                    }
                  },
                  "required": []
                }
              },
              "required": []
            }
          }
        ],
        "outgoing": [
          {
            "$id": "output1",
            "type": "object"
          },
          {
            "$id": "output2",
            "type": "object"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "method",
            "library": "Array",
            "method": "getIndex",
            "args": [
              null,
              0
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 3,
            "type": "method",
            "library": "Array",
            "method": "getIndex",
            "args": [
              null,
              1
            ],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "input",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 2,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "input",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 3,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "output1",
              "ptr": ""
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "output2",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2022-04-27T22:47:30.779Z",
        "createdBy": {
          "_id": "61e785bd0aca955e189258e4",
          "provenance": "Itential-Okta",
          "username": "travis.nicks@itential.com"
        },
        "lastUpdated": "2022-04-28T14:54:16.706Z",
        "lastUpdatedBy": {
          "_id": "61e785bd0aca955e189258e4",
          "provenance": "Itential-Okta",
          "username": "travis.nicks@itential.com"
        },
        "version": "3.20.5",
        "tags": []
      }
    }
  ],
  "readme": "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n\n<!-- Update the below line with your Pre-Built name -->\n# Pre-Built Name\n\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n* [Additional Information](#additional-information)\n\n## Overview\n\n<!-- Write a few sentences about the Pre-Built and explain the use case(s) -->\n<!-- Avoid using the word Artifact. Please use Pre-Built, Pre-Built Transformation or Pre-Built Automation -->\n<!-- Ex.: The Migration Wizard enables IAP users to conveniently move their automation use cases between different IAP environments -->\n<!-- (e.g. from Dev to Pre-Production or from Lab to Production). -->\n\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GitLab -->\n<!-- REPLACE COMMENT BELOW WITH IMAGE OF YOUR MAIN WORKFLOW -->\n<!--\n<table><tr><td>\n  <img src=\"itential/CertRepo/-/raw/refs/heads/main/images/workflow.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n-->\n<!-- REPLACE COMMENT ABOVE WITH IMAGE OF YOUR MAIN WORKFLOW -->\n\n<!-- ADD ESTIMATED RUN TIME HERE -->\n<!-- e.g. Estimated Run Time: 34 min. -->\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n<!-- Include any other required apps or adapters in this list -->\n<!-- Ex.: EC2 Adapter -->\n* Itential Automation Platform\n  * `^2021.1`\n\n## Requirements\n\nThis Pre-Built requires the following:\n\n<!-- Unordered list highlighting the requirements of the Pre-Built -->\n<!-- EXAMPLE -->\n<!-- * cisco ios device -->\n<!-- * Ansible or NSO (with F5 NED) * -->\n\n## Features\n\nThe main benefits and features of the Pre-Built are outlined below.\n\n<!-- Unordered list highlighting the most exciting features of the Pre-Built -->\n<!-- EXAMPLE -->\n<!-- * Automatically checks for device type -->\n<!-- * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n\n\n## Future Enhancements\n\n<!-- OPTIONAL - Mention if the Pre-Built will be enhanced with additional features on the road map -->\n<!-- Ex.: This Pre-Built would support Cisco XR and F5 devices -->\n\n## How to Install\n\nTo install the Pre-Built:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the Pre-Built. \n* The Pre-Built can be installed from within App-Admin_Essential. Simply search for the name of your desired Pre-Built and click the install button (as shown below).\n\n<!-- REPLACE BELOW WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->\n<!--\n<table><tr><td>\n  <img src=\"itential/CertRepo/-/raw/refs/heads/main/images/install.png\" alt=\"install\" width=\"600px\">\n</td></tr></table>\n-->\n<!-- REPLACE ABOVE WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->\n\n<!-- OPTIONAL - Explain if external components are required outside of IAP -->\n<!-- Ex.: The Ansible roles required for this Pre-Built can be found in the repository located at https://gitlab.com/itentialopensource/pre-built-automations/hello-world -->\n\n## How to Run\n\nUse the following to run the Pre-Built:\n\n<!-- Explain the main entrypoint(s) for this Pre-Built: Automation Catalog item, Workflow, Postman, etc. -->\n\n## Additional Information\n\nPlease use your Itential Customer Success account if you need support when using this Pre-Built."
}